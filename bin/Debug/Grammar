--
--#### demarcates sections
--Major sections are: Grammar, Spaces, Space Objects & Operations, Grammar Rule->Object+Operation Map, (Unimplemented yet) AST+Annotation->DSL Map, (Unimplemented yet) AST->Default Object/Operation Map

--Grammar begins here
--Begin _ indicates "don't generate code for this production"
--Begin + generates code

--must add frames into this



+STMT := 
	+ASSIGN | 
	+DECLARE | 
	+EXPR |
	+IFCOND |
	_STMT _STMT

+IFCOND :=
	+EXPR _STMT |
	+EXPR _STMT +IFCOND |
	+EXPR _STMT _STMT
	
+EXPR :=
	+REAL3_EXPR |
	+REAL1_EXPR |
	+MATRIX_EXPR |
	+REAL4_EXPR

+ASSIGN := 
	+REAL1_VAR = +REAL1_EXPR | 
	+REAL3_VAR = +REAL3_EXPR | 
	+REAL4_VAR = +REAL4_EXPR |
	+MATRIX_VAR = +MATRIX_EXPR

+DECLARE :=
	DECL +REAL1_VAR +REAL1_EXPR |
	DECL +REAL3_VAR +REAL3_EXPR | 
	DECL +REAL4_VAR +REAL4_EXPR |
	DECL +MATRIX_VAR +MATRIX_EXPR |
	DECL +REAL1_VAR |
	DECL +REAL3_VAR |
	DECL +REAL4_VAR |
	DECL +MATRIX_VAR

+EXPR :=
	+REAL1_EXPR |
	+REAL3_EXPR |
	+REAL4_EXPR |
	+MATRIX_EXPR

+REAL1_EXPR := 
	PAREN +REAL1_EXPR |
	INV +REAL1_EXPR |
	NEG +REAL1_EXPR |
	ADD +REAL1_EXPR +REAL1_EXPR | 
	MUL +REAL1_EXPR +REAL1_EXPR | 
	+REAL1_VAR | 
	+REAL1_LITERAL

+REAL3_EXPR := 
	PAREN +REAL3_EXPR | 
	ADD +REAL3_EXPR +REAL3_EXPR |
	INV +REAL3_EXPR |
	NEG +REAL3_EXPR |
	MUL +REAL3_EXPR +REAL3_EXPR | 
	MUL +REAL3_EXPR +REAL1_EXPR |
	MUL +MATRIX_EXPR +REAL3_EXPR | 
	+REAL3_VAR | 
	+VEC_LITERAL

+REAL4_EXPR :=
	PAREN +REAL4_EXPR |
	ADD +REAL4_EXPR +REAL4_EXPR |
	MUL +REAL4_EXPR +REAL4_EXPR |
	+REAL4_VAR |
	+REAL4_VAR_LITERAL 

+MATRIX_EXPR :=
	PAREN +MATRIX_EXPR |
	MUL +MATRIX_EXPR +MATRIX_EXPR |
	MATRIX_VAR |
	MATRIX_LITERAL 


+REAL1_VAR := 
	IDENT
+REAL3_VAR := 
	IDENT
+REAL4_VAR := 
	IDENT
+MATRIX_VAR := 
	IDENT


+REAL1_LITERAL := 
	FLOAT
+REAL3_LITERAL := 
	+REAL1_EXPR +REAL1_EXPR +REAL1_EXPR
+REAL4_VAR_LITERAL := 
	+REAL1_EXPR +REAL1_EXPR +REAL1_EXPR +REAL1_EXPR |
	+ANGLE_EXPR +ANGLE_EXPR +ANGLE_EXPR
+MATRIX_LITERAL := 
	+REAL3_EXPR +REAL3_EXPR +REAL3_EXPR | 
	+REAL1_EXPR +REAL1_EXPR +REAL1_EXPR +REAL1_EXPR +REAL1_EXPR +REAL1_EXPR +REAL1_EXPR +REAL1_EXPR +REAL1_EXPR

####

--Define instantiable spaces

{
	EuclideanGeometry, Euclidean,{Name,Dimension},Geometric
	ClassicalTime, Affine, {Name},Time
	ClassicalVelocity, Vector, {Name,Dimension},Velocity
}
--Define instances
{
	EuclideanGeometry,geom3d,{worldGeometry,3}
	ClassicalTime,time,{worldTime},
	ClassicalVelocity,vel,{worldVelocity,3}
}

####

--Define instantiable objects & operations contingent on space type 
--Code is generated for these
--These turn into annotations, for example, Euclidean Geometry is Euclidean with prefix Geometric -> generate annotation GeometricAddAddVector

Vector={Vector,Scalar,BasisChange,Scaling,Shear}
Affine={FrameChange,Point,HomogenousPoint},Vector
Euclidean={Rotation,Orientation,Angle},Affine

--etc
--do operations go here or just objects?
--and operations are resolved in Lean...?

####

--not checking for operational consistency here. should i be?
--these are the "CATEGORIES" referred to in email


{
	REAL1_EXPR={Euclidean.Angle,Vector.Scalar}
	REAL3_EXPR={Euclidean.Rotation,Euclidean.Orientation,Vector.Vector,Affine.Point}
	MATRIX_EXPR={Vector.Scaling,Vector.Shear,Vector.BasisChange, Affine.FrameChange, Euclidean.Rotation}
	REAL4_EXPR={Euclidean.Rotation,Euclidean.Orientation,Affine.HomogenousPoint}
}

####

--here are rules from (AST Grammar Rule)x(Space,Annotation)->LeanDSL
--just an example for now, this can be filled out quickly
--these demonstrate the "CATEGORIES" referred ot in email - MERGE WITH PREVIOUS SECTION?
--Also need to dump Spaces into Lean as a "HEADER"
{
	REAL1_EXPR = {(EuclideanGeometry,GeometricScalar, "define "%GeometricScalar.Name"%" : peirce.geom3d.scalar = "%GeometricScalar.Value )}
}
####

--when it's time to revisit AST parsing, consider this
--set of rules for "defaults" when initializing annotations
{
	tf.Vector3 : {EuclideanGeometry, Euclidean.Vector }
	geometry_msgs/Accel.linear : {ClassicalAcceleration,Vector.Vector}
	tf.Point : {EuclideanGeometry,Euclidean.Point}
}